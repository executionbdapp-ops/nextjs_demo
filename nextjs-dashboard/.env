# Postgres connection (pooled)
POSTGRES_URL=postgresql://neondb_owner:npg_MD2eucStYNq6@ep-shy-hill-a10vzuth-pooler.ap-southeast-1.aws.neon.tech/neondb?sslmode=require

# Postgres connection (for Prisma / unpooled)
POSTGRES_PRISMA_URL=postgresql://neondb_owner:npg_MD2eucStYNq6@ep-shy-hill-a10vzuth-pooler.ap-southeast-1.aws.neon.tech/neondb?connect_timeout=15&sslmode=require

# Non-pooled (direct) connection
POSTGRES_URL_NON_POOLING=postgresql://neondb_owner:npg_MD2eucStYNq6@ep-shy-hill-a10vzuth.ap-southeast-1.aws.neon.tech/neondb?sslmode=require

# Individual parameters (some frameworks/tools use these)
POSTGRES_USER=neondb_owner
POSTGRES_HOST=ep-shy-hill-a10vzuth-pooler.ap-southeast-1.aws.neon.tech
POSTGRES_PASSWORD=npg_MD2eucStYNq6
POSTGRES_DATABASE=neondb

# Auth
# Generate a new secret using: `openssl rand -base64 32`
AUTH_SECRET=your_generated_secret_here

# Local dev auth URL (NextAuth or similar)
AUTH_URL=http://localhost:3000/api/auth

# Optional — Neon Auth for Next.js integration (keep if using Neon’s auth stack)
NEXT_PUBLIC_STACK_PROJECT_ID=2bbc5939-0a25-4dae-83c7-b9a82318022c
NEXT_PUBLIC_STACK_PUBLISHABLE_CLIENT_KEY=pck_fase5rxvw8kay28pr383pw9af1y6y4nph8rt13mf2h4x8
STACK_SECRET_SERVER_KEY=ssk_wbh9p8exw0mct6ega1zrhpxf44923ve231cg3k300drrr
